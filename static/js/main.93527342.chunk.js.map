{"version":3,"sources":["components/filter/filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/contacts/contacts-store.js","redux/contacts/contacts-selectors.js","components/form/form.jsx","components/filter/filter.jsx","components/contacts/contactList.jsx","App.js","index.js","components/form/form.module.css","components/contacts/contacts.module.css"],"names":["module","exports","addContact","createAction","payload","name","number","id","uuidv4","deleteContact","contactsFilter","contactList","console","log","contactsActions","items","createReducer","state","action","filter","contact","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","contactsStore","configureStore","reducer","contacts","persistReducer","contactsReducer","persistor","persistStore","getContacts","filtredContacts","allContacts","getFilter","lowFilter","toLowerCase","includes","Form","useState","setName","setNumber","useSelector","dispatch","useDispatch","onChange","e","currentTarget","value","reset","onSubmit","preventDefault","find","cont","window","alert","className","css","form","labelField","label","type","pattern","title","required","input","formBtn","Filter","filterLabel","event","filterInput","ContactList","contactsList","map","contactItem","marker","contactName","contactNumber","onClick","contactBtn","App","ReactDOM","render","StrictMode","store","loading","document","getElementById"],"mappings":"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","file":"static/js/main.93527342.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"filter_filterLabel__1GXeY\",\"filterInput\":\"filter_filterInput__3up4A\"};","import { createAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\n// import types from './contacts-types';\n\n// const addContact = ({ name, number }) => ({\n//   type: types.ADD,\n//   payload: {\n//     name,\n//     number,\n//     id: uuidv4(),\n//   },\n// });\n\n// const deleteContact = contactId => ({\n//   type: types.DELETE,\n//   payload: contactId,\n// });\n\n// const contactsFilter = value => ({\n//   type: types.FILTER,\n//   payload: value,\n// });\n\nconst addContact = createAction(\"contacts/add\", ({ name, number }) => {\n  return {\n    payload: {\n      name,\n      number,\n      id: uuidv4(),\n    },\n  };\n});\nconst deleteContact = createAction(\"contacts/delete\");\nconst contactsFilter = createAction(\"contacts/filter\");\n\nexport default { addContact, deleteContact, contactsFilter };\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport contactsActions from \"./contacts-actions\";\n// import types from './contacts-types';\n\n// {\n//   contacts: {\n//     items: [],\n//     filter: ''\n//   }\n// }\n\nconst contactList = [\n  { name: \"Rosie Simpson\", id: uuidv4(), number: \"459-12-56\" },\n  { name: \"Hermione Kline\", id: uuidv4(), number: \"443-89-12\" },\n  { name: \"Eden Clements\", id: uuidv4(), number: \"645-17-79\" },\n];\n\nconsole.log(contactsActions);\n\nconst items = createReducer(contactList, {\n  [contactsActions.addContact]: (state, action) => [action.payload, ...state],\n  [contactsActions.deleteContact]: (state, action) =>\n    state.filter((contact) => contact.id !== action.payload),\n});\n\nconst filter = createReducer(\"\", {\n  [contactsActions.contactsFilter]: (state, action) => action.payload,\n});\n\n// const items = (state = contactList, action) => {\n//   switch (action.type) {\n//     case types.ADD:\n//       return [action.payload, ...state];\n\n//     case types.DELETE:\n//       return state.filter(contact => contact.id !== action.payload);\n\n//     default:\n//       return state;\n//   }\n// };\n// const filter = (state = '', action) => {\n//   switch (action.type) {\n//     case [contactsActions.contactsFilter]:\n//       return action.payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({ items, filter });\n","// import { combineReducers } from 'redux';\nimport logger from \"redux-logger\";\nimport {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./contacts-reducer\";\n\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n// });\n\n// const contactsStore = createStore(rootReducer, composeWithDevTools());\n// console.log(process.env.NODE_ENV);\n// console.log(getDefaultMiddleware());\n\n// const rootReducer = combineReducers({\n//   contacts: persistReducer(persistConfig, contactsReducer),\n// });\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: \"contact\",\n  storage,\n  blacklist: [\"filter\"],\n};\nconst contactsStore = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  // devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(contactsStore);\n\nexport default { contactsStore, persistor };\n","export const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const filtredContacts = (state) => {\n  const allContacts = getContacts(state);\n  const filter = getFilter(state);\n  const lowFilter = filter.toLowerCase();\n\n  return allContacts.filter((contact) =>\n    contact.name.toLowerCase().includes(lowFilter)\n  );\n};\n","// import PropTypes from 'prop-types';\nimport { useState } from \"react\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport { getContacts } from \"../../redux/contacts/contacts-selectors\";\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\nimport css from \"./form.module.css\";\n\nexport default function Form() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const state = { name, number };\n\n  const items = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const onChange = (e) => {\n    switch (e.currentTarget.name) {\n      case \"name\":\n        setName(e.currentTarget.value);\n        break;\n      case \"number\":\n        setNumber(e.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n\n    if (items.find((cont) => cont.name.toLowerCase() === name.toLowerCase())) {\n      return window.alert(`${name} is already in contacts`);\n    }\n    dispatch(contactsActions.addContact(state));\n    // onSubmit(state);\n\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={onFormSubmit} className={css.form}>\n      <label className={css.labelField}>\n        <span className={css.label}>Name</span>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={onChange}\n          className={css.input}\n        />\n      </label>\n      <label className={css.labelField}>\n        <span className={css.label}>Number</span>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={onChange}\n          className={css.input}\n        />\n      </label>\n      <button type=\"submit\" className={css.formBtn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n// Form.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n\n// const mapStateToProps = state => {\n//   return state.contacts;\n// };\n\n// const mapDispatchToProps = dispatch => ({\n//   onSubmit: state => dispatch(contactsActions.addContact(state)),\n// });\n// export default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import { connect, useDispatch } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\nimport css from \"./filter.module.css\";\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const onChange = (event) =>\n    dispatch(contactsActions.contactsFilter(event.currentTarget.value));\n\n  return (\n    <label className={css.filterLabel}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"name\"\n        // value={value}\n        onChange={onChange}\n        className={css.filterInput}\n      />\n    </label>\n  );\n}\n\n// const mapDispatchToProps = dispatch => ({\n//   onChange: event =>\n//     dispatch(contactsActions.contactsFilter(event.currentTarget.value)),\n// });\n\n// export default connect(null, mapDispatchToProps)(Filter);\n","// import PropTypes from 'prop-types';\nimport { useDispatch } from \"react-redux\";\nimport { connect, useSelector } from \"react-redux\";\nimport { filtredContacts } from \"../../redux/contacts/contacts-selectors\";\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\nimport css from \"./contacts.module.css\";\n\nexport default function ContactList() {\n  const contacts = useSelector(filtredContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={css.contactsList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={css.contactItem}>\n          <div className={css.contact}>\n            <span className={css.marker}></span>\n            <span className={css.contactName}>{name}:</span>\n            <span className={css.contactNumber}>{number}</span>\n          </div>\n\n          <button\n            type=\"button\"\n            onClick={() => dispatch(contactsActions.deleteContact(id))}\n            className={css.contactBtn}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.exact({\n//       id: PropTypes.string.isRequired,\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     })\n//   ),\n//   onDeleteBtn: PropTypes.func.isRequired,\n// };\n\n// const filtredContacts = (allContacts, filter) => {\n//   const lowFilter = filter.toLowerCase();\n\n//   return allContacts.filter(contact =>\n//     contact.name.toLowerCase().includes(lowFilter)\n//   );\n// };\n\n// const mapStateToProps = state => {\n//   const { items, filter } = state.contacts;\n\n//   return { contacts: filtredContacts(items, filter) };\n// };\n\n// const mapDispatchToProps = dispatch => ({\n//   onDeleteBtn: id => dispatch(contactsActions.deleteContact(id)),\n// });\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","// import { useEffect, useState } from \"react\";\n// import { v4 as uuidv4 } from \"uuid\";\nimport Form from \"./components/form/form\";\nimport Filter from \"./components/filter/filter\";\nimport ContactList from \"./components/contacts/contactList\";\n// import Counter from './components/Counter/Counter';\n\nexport const App = () => {\n  // const [contacts, setContacts] = useState(() => {\n  //   return (\n  //     JSON.parse(localStorage.getItem('contacts')) ?? [\n  //       { name: 'Rosie Simpson', id: uuidv4(), number: '459-12-56' },\n  //       { name: 'Hermione Kline', id: uuidv4(), number: '443-89-12' },\n  //       { name: 'Eden Clements', id: uuidv4(), number: '645-17-79' },\n  //     ]\n  //   );\n  // });\n  // const [filter, setFilter] = useState('');\n\n  // useEffect(() => {\n  //   localStorage.setItem('contacts', JSON.stringify(contacts));\n  // }, [contacts]);\n\n  // const addContact = ({ name, number }) => {\n  //   const contact = {\n  //     name,\n  //     number,\n  //     id: uuidv4(),\n  //   };\n  //   if (\n  //     contacts.find(\n  //       cont => cont.name.toLowerCase() === contact.name.toLowerCase()\n  //     )\n  //   ) {\n  //     window.alert(`${contact.name} is already in contacts`);\n  //     return;\n  //   } else setContacts([contact, ...contacts]);\n  // };\n\n  // const onFilterChange = e => {\n  //   setFilter(e.currentTarget.value);\n  // };\n\n  // const contactsFilter = () => {\n  //   const lowFilter = filter.toLowerCase();\n  //   return contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(lowFilter)\n  //   );\n  // };\n  // const filtredContacts = contactsFilter();\n\n  // const deleteContact = contactId => {\n  //   setContacts(contacts.filter(contact => contact.id !== contactId));\n  // };\n\n  return (\n    <div className=\"App\">\n      {/* <Counter initialValue={10} /> */}\n      <h1 className=\"title\">Phonebook</h1>\n      <Form />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n// import store from './redux/counter/store';\nimport store from \"./redux/contacts/contacts-store\";\nimport { App } from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.contactsStore}>\n      <PersistGate loading={<h1>Loading..</h1>} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__1Ljzh\",\"labelField\":\"form_labelField__2H5He\",\"label\":\"form_label__2CZws\",\"input\":\"form_input__kPN_j\",\"formBtn\":\"form_formBtn__bGnBn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"contacts_contactsList__3oLdY\",\"contactItem\":\"contacts_contactItem__3ns3O\",\"contact\":\"contacts_contact____H-7\",\"marker\":\"contacts_marker__1m7rQ\",\"contactName\":\"contacts_contactName__3522b\",\"contactNumber\":\"contacts_contactNumber__2spFi\",\"contactBtn\":\"contacts_contactBtn__EfRg6\"};"],"sourceRoot":""}